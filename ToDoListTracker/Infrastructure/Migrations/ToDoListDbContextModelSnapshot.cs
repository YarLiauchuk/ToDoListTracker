// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoListTracker.Infrastructure;

#nullable disable

namespace ToDoListTracker.Infrastructure.Migrations
{
    [DbContext(typeof(ToDoListDbContext))]
    partial class ToDoListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToDoListTracker.Domain.Entities.Priority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4396a607-4fa1-4ce6-9378-69b6db56e963"),
                            Level = 1
                        },
                        new
                        {
                            Id = new Guid("1998214e-0fea-4673-b736-6bf6b87de8da"),
                            Level = 2
                        },
                        new
                        {
                            Id = new Guid("14a32d34-9241-4040-bc9d-e438530810de"),
                            Level = 3
                        },
                        new
                        {
                            Id = new Guid("3ec8efa0-5305-403f-adfe-644051f4e476"),
                            Level = 4
                        });
                });

            modelBuilder.Entity("ToDoListTracker.Domain.Entities.ToDoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PriorityId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PriorityId1")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.HasIndex("PriorityId1");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("ToDoItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("84d15eb3-036a-4f15-832c-418b0ac9d047"),
                            DueDate = new DateTime(2024, 7, 29, 3, 21, 46, 199, DateTimeKind.Utc).AddTicks(9143),
                            IsCompleted = false,
                            IsDeleted = false,
                            PriorityId = new Guid("4396a607-4fa1-4ce6-9378-69b6db56e963"),
                            Title = "Household chores",
                            UserId = new Guid("6ba91f37-5e9d-425b-bdc7-b498437098ee")
                        },
                        new
                        {
                            Id = new Guid("fcfe54f0-7b06-48ce-a636-eec4457e725f"),
                            DueDate = new DateTime(2024, 7, 29, 3, 21, 46, 199, DateTimeKind.Utc).AddTicks(9153),
                            IsCompleted = false,
                            IsDeleted = false,
                            PriorityId = new Guid("1998214e-0fea-4673-b736-6bf6b87de8da"),
                            Title = "Work task",
                            UserId = new Guid("f283ce82-f941-4068-acc2-a788ffd4b634")
                        },
                        new
                        {
                            Id = new Guid("0fcd221c-3cc4-42ba-819d-2ee157a745ec"),
                            DueDate = new DateTime(2024, 7, 29, 3, 21, 46, 199, DateTimeKind.Utc).AddTicks(9157),
                            IsCompleted = true,
                            IsDeleted = false,
                            PriorityId = new Guid("14a32d34-9241-4040-bc9d-e438530810de"),
                            Title = "Something",
                            UserId = new Guid("23c59c51-5ab1-4a0e-8374-89f7d5323295")
                        },
                        new
                        {
                            Id = new Guid("bd4e74b9-6728-4233-99e7-976799932854"),
                            DueDate = new DateTime(2024, 7, 29, 3, 21, 46, 199, DateTimeKind.Utc).AddTicks(9160),
                            IsCompleted = true,
                            IsDeleted = false,
                            PriorityId = new Guid("3ec8efa0-5305-403f-adfe-644051f4e476"),
                            Title = "Relax",
                            UserId = new Guid("63a16261-755c-42d9-b490-c1bfbb93f18d")
                        });
                });

            modelBuilder.Entity("ToDoListTracker.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6ba91f37-5e9d-425b-bdc7-b498437098ee"),
                            Name = "Ivan"
                        },
                        new
                        {
                            Id = new Guid("f283ce82-f941-4068-acc2-a788ffd4b634"),
                            Name = "Alex"
                        },
                        new
                        {
                            Id = new Guid("23c59c51-5ab1-4a0e-8374-89f7d5323295"),
                            Name = "Helena"
                        },
                        new
                        {
                            Id = new Guid("63a16261-755c-42d9-b490-c1bfbb93f18d"),
                            Name = "Jonh"
                        });
                });

            modelBuilder.Entity("ToDoListTracker.Domain.Entities.ToDoItem", b =>
                {
                    b.HasOne("ToDoListTracker.Domain.Entities.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId");

                    b.HasOne("ToDoListTracker.Domain.Entities.Priority", null)
                        .WithMany("ToDoItems")
                        .HasForeignKey("PriorityId1");

                    b.HasOne("ToDoListTracker.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDoListTracker.Domain.Entities.User", null)
                        .WithMany("ToDoItems")
                        .HasForeignKey("UserId1");

                    b.Navigation("Priority");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoListTracker.Domain.Entities.Priority", b =>
                {
                    b.Navigation("ToDoItems");
                });

            modelBuilder.Entity("ToDoListTracker.Domain.Entities.User", b =>
                {
                    b.Navigation("ToDoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
